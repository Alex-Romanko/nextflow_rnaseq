// Load base.config by default for all pipelines
includeConfig 'conf/base.config'
// Load modules.config for DSL2 module specific options
includeConfig 'conf/modules.config'

profiles {
    docker {
	docker.enabled = true
	docker.runOptions = '-u $(id -u):$(id -g)'
	process {
	    withLabel:process_high {
		maxForks = 1
	    }
	}
	process.container = 'alexromanko/mamba_rnaseq:latest'
	process {
	    withName:MULTIQC {
		container = 'alexromanko/rnaseq:latest'
	    }
	    withName:MERGE_FQ {
		container = 'alexromanko/rnaseq:latest'
	    }
	    withName:FASTQC {
		container = 'alexromanko/rnaseq:latest'
	    }
	    withName:TRIMGALORE  {
		container = 'chrishah/trim_galore'
	    }

	    withName:FASTP_TRIM_X {
		container = 'alexromanko/rnaseq:latest'
	    }
	    withName:FASTP_TRIM_CLIP {
		container = 'alexromanko/rnaseq:latest'
	    }
	    withName:SEQKIT_PAIR_FQ {
		// container = 'staphb/seqkit'
		container = 'alexromanko/rnaseq:latest'
	    }
	    withName:UMITOOLS_EXTRACT {
		container = 'alexromanko/rnaseq:latest'
	    }
	    withName:UMITOOLS_DEDUP {
		container = 'alexromanko/rnaseq:latest'
	    }
	    withName:UMITOOLS_PREPAREFORRSEM {
		container = 'alexromanko/rnaseq:latest'
	    }
	    withName:ARRIBA_FUSION {
		container = 'alexromanko/rnaseq:latest'
	    }
	    withName:ARRIBA_DOWNLOAD_DB {
		container = 'alexromanko/rnaseq:latest'
	    }
	    withName:STAR_GENOMEGENERATE {
		container = 'alexromanko/rnaseq:latest'
	    }
	    withName:STAR_ALIGN {
		container = 'alexromanko/rnaseq:latest'
		// cpus = 8
		// memory = '40 GB'
	    }
	    withName:CTAT_LIB_BUILD {
		container = 'trinityctat/starfusion:latest'
	    }
	    withName:STAR_FUSION_STAR {
		container = 'trinityctat/starfusion:latest'
	    }
	    withName:STAR_FUSION_MERGE_TSV {
		container = 'alexromanko/rutils:latest'
	    }
	    withName:STAR_FUSION_FIINSPECTOR {
		container = 'trinityctat/starfusion:latest'
	    }
	    withName:SAMTOOLS_INDEX {
		container = 'alexromanko/rnaseq:latest'
	    }
	    withName:RSEM_PREPAREREFERENCE {
		container = 'alexromanko/rnaseq:latest'
	    }
	    withName:RSEM_CALCULATEEXPRESSION {
		container = 'alexromanko/rnaseq:latest'
	    }
	    withName:RSEM_MERGE_EXPRESSIONS {
		container = 'alexromanko/rnaseq:latest'
	    }
	    withName:PICARD_SORTSAM {
		container = 'broadinstitute/picard:latest'
	    }
	    // withName:SAMTOOLS_SORT {
	    //     container = 'alexromanko/rnaseq:latest'
	    // }
	    // withName:SAMTOOLS_FAIDX {
	    //     container = 'alexromanko/rnaseq:latest'
	    // }
	}
    }

    singularity {
	process {
	    withLabel:process_high {
		maxForks = 1
	    }
	}
	singularity.enabled = true
	// singularity.autoMounts = true // already the default option
	singularity.ociAutoPull = true
	singularity.ociMode = true
    }

    slurm {
	executor {
	    name = "slurm"
	    queueSize = 2000
	    submitRateLimit = "10/1sec"
	    exitReadTimeout = "30 min"
	    jobName = {
		task.name // [] and " " not allowed in lsf job names
		    .replace("[", "(")
		    .replace("]", ")")
		    .replace(" ", "_")
	    }
	}
	singularity {
	    enabled = true
	    ociAutoPull = true
	    ociMode = true
	    // the default is 20 minutes and fails with large images
	    pullTimeout = "3 hours"
	}
}

    test {
	docker {
	    enabled = false
	}
    }
}
