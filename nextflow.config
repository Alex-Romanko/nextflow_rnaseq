profiles {
    docker {
	// docker.enabled = true
	process.container = 'alexromanko/mamba_rnaseq:latest'
	docker.runOptions = '-u $(id -u):$(id -g)'
	process {
	    withLabel:process_high {
		maxForks = 1
	    }
	}
	process {
	    withName:MERGE_FQ {
		container = 'alexromanko/rnaseq:latest'
	    }
	    withName:FASTQC {
		container = 'alexromanko/rnaseq:latest'
	    }
	    withName:TRIMGALORE  {
		container = 'chrishah/trim_galore'
	    }
	    withName:STAR_GENOMEGENERATE {
		container = 'alexromanko/rnaseq:latest'
	    }
	    withName:STAR_ALIGN {
		container = 'alexromanko/rnaseq:latest'
	    }
	    withName:SAMTOOLS_INDEX {
		container = 'alexromanko/rnaseq:latest'
	    }
	    withName:RSEM_PREPAREREFERENCE {
		container = 'alexromanko/rnaseq:latest'
	    }
	    withName:RSEM_CALCULATEEXPRESSION {
		container = 'alexromanko/rnaseq:latest'
	    }
	    withName:RSEM_MERGE_EXPRESSIONS {
		container = 'alexromanko/rnaseq:latest'
	    }
	    // withName:SAMTOOLS_SORT {
	    //     container = 'alexromanko/rnaseq:latest'
	    // }
	    // withName:SAMTOOLS_FAIDX {
	    //     container = 'alexromanko/rnaseq:latest'
	    // }
	}
	docker {
	    enabled = true
	}
    }

    singularity {
	// docker.enabled = true
	process.container = 'docker://alexromanko/mamba_rnaseq:latest'
	process {
	    withLabel:process_high {
		maxForks = 1
	    }
	}
	process {
	    withName:MERGE_FQ {
		container = 'docker://alexromanko/rnaseq:latest'
	    }
	    withName:FASTQC {
		container = 'docker://alexromanko/rnaseq:latest'
	    }
	    withName:TRIMGALORE  {
		container = 'docker://chrishah/trim_galore'
	    }
	    withName:STAR_GENOMEGENERATE {
		container = 'docker://alexromanko/rnaseq:latest'
	    }
	    withName:STAR_ALIGN {
		container = 'docker://alexromanko/rnaseq:latest'
	    }
	    withName:SAMTOOLS_INDEX {
		container = 'docker://alexromanko/rnaseq:latest'
	    }
	    withName:RSEM_PREPAREREFERENCE {
		container = 'docker://alexromanko/rnaseq:latest'
	    }
	    withName:RSEM_CALCULATEEXPRESSION {
		container = 'docker://alexromanko/rnaseq:latest'
	    }
	    withName:RSEM_MERGE_EXPRESSIONS {
		container = 'docker://alexromanko/rnaseq:latest'
	    }
	    // withName:SAMTOOLS_SORT {
	    //     container = 'alexromanko/rnaseq:latest'
	    // }
	    // withName:SAMTOOLS_FAIDX {
	    //     container = 'alexromanko/rnaseq:latest'
	    // }
	}
	singularity.enabled = true
	// singularity.autoMounts = true // already the default option
	singularity.ociAutoPull = true
	singularity.ociMode = true
    }
    slurm {
	executor {
	    name = "slurm"
	    queueSize = 2000
	    submitRateLimit = "10/1sec"
	    exitReadTimeout = "30 min"
	    jobName = {
		task.name // [] and " " not allowed in lsf job names
		    .replace("[", "(")
		    .replace("]", ")")
		    .replace(" ", "_")
	    }
	}
	singularity {
	    enabled = true
	    ociAutoPull = true
	    ociMode = true
	    // the default is 20 minutes and fails with large images
	    pullTimeout = "3 hours"
	}

	process.container = 'docker://alexromanko/mamba_rnaseq:latest'
	// process {
	//     withLabel:process_high {
	// 	maxForks = 1
	//     }
	// }
	process {
	    withName:MERGE_FQ {
		container = 'docker://alexromanko/rnaseq:latest'
	    }
	    withName:FASTQC {
		container = 'docker://alexromanko/rnaseq:latest'
	    }
	    withName:TRIMGALORE  {
		container = 'docker://chrishah/trim_galore'
	    }
	    withName:STAR_GENOMEGENERATE {
		container = 'docker://alexromanko/rnaseq:latest'
	    }
	    withName:STAR_ALIGN {
		container = 'docker://alexromanko/rnaseq:latest'
	    }
	    withName:SAMTOOLS_INDEX {
		container = 'docker://alexromanko/rnaseq:latest'
	    }
	    withName:RSEM_PREPAREREFERENCE {
		container = 'docker://alexromanko/rnaseq:latest'
	    }
	    withName:RSEM_CALCULATEEXPRESSION {
		container = 'docker://alexromanko/rnaseq:latest'
	    }
	    withName:RSEM_MERGE_EXPRESSIONS {
		container = 'docker://alexromanko/rnaseq:latest'
	    }
	    // withName:SAMTOOLS_SORT {
	    //     container = 'alexromanko/rnaseq:latest'
	    // }
	    // withName:SAMTOOLS_FAIDX {
	    //     container = 'alexromanko/rnaseq:latest'
	    // }
	}

}
    test {
	docker {
	    enabled = false
	}
    }
}
